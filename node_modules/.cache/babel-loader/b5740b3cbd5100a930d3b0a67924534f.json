{"ast":null,"code":"var _jsxFileName = \"/Users/muhammadjaved/Downloads/youtube/src/Component/Youtube_search/YoutubeSearch.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './YoutubeSearch.css';\nimport imghovericon from '../Images/watch.png';\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\n\nclass YoutubeSearch extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: this.props.match.params.query,\n      relatedvideo: [],\n      video_static_data_get: []\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.match.params.query !== state.query) {\n      return {\n        query: props.match.params.query\n      };\n    } // Return null if the state hasn't changed\n\n\n    return null;\n  }\n\n  componentDidUpdate(prevProps, prevStates) {\n    if (this.state.query !== prevStates.query) {\n      this.componentDidMount();\n    }\n  }\n\n  componentDidMount() {\n    fetch(\"https://www.googleapis.com/youtube/v3/search?q=\".concat(this.state.query, \"&order=viewCount&part=snippet&type=video&maxResults=20&key=AIzaSyCMwyn5PYk99jDsgTFG3d4AAiKTcptRMoU\")).then(data => data.json()).then(data1 => {\n      this.setState({\n        relatedvideo: data1.items\n      });\n    }).catch(() => {\n      alert('Failed');\n    });\n  }\n\n  render() {\n    //console.log(this.state);   \n    //console.log(video_static_data_get);\n    const _this$state = this.state,\n          relatedvideo = _this$state.relatedvideo,\n          video_static_data_get = _this$state.video_static_data_get;\n    return React.createElement(\"div\", {\n      className: \"watch_main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"right_side\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, relatedvideo.map(data => {\n      return React.createElement(\"div\", {\n        className: \"related_video\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"video_div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/watch/\".concat(data.id.videoId),\n        className: \"video_image_side\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"hover_show_icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        width: \"25px\",\n        src: imghovericon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      })), React.createElement(\"img\", {\n        className: \"watch_img_right_side\",\n        width: \"180px\",\n        height: \"100px\",\n        src: data.snippet.thumbnails.medium.url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"video_title_side\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/watch/\".concat(data.id.videoId),\n        className: \"youtube_search_tilte\",\n        title: data.snippet.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, data.snippet.title), React.createElement(\"span\", {\n        title: data.snippet.channelTitle,\n        className: \"watch_channel_name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, data.snippet.channelTitle), React.createElement(\"span\", {\n        title: \"venus\",\n        className: \"watch_channel_name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"456648\"))));\n    })));\n  }\n\n}\n\nexport default YoutubeSearch;","map":{"version":3,"sources":["/Users/muhammadjaved/Downloads/youtube/src/Component/Youtube_search/YoutubeSearch.js"],"names":["React","Component","ReactDOM","imghovericon","BrowserRouter","Route","Link","YoutubeSearch","constructor","props","state","query","match","params","relatedvideo","video_static_data_get","getDerivedStateFromProps","componentDidUpdate","prevProps","prevStates","componentDidMount","fetch","then","data","json","data1","setState","items","catch","alert","render","map","id","videoId","snippet","thumbnails","medium","url","title","channelTitle"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './YoutubeSearch.css';\nimport imghovericon from '../Images/watch.png';\nimport {BrowserRouter,Route,Link} from 'react-router-dom';\n\nclass YoutubeSearch extends Component{\n \n    constructor(props){\n        super(props);\n        this.state ={\n            query :this.props.match.params.query,\n            relatedvideo : [],\n            video_static_data_get : []\n        }\n    }\n    static getDerivedStateFromProps(props, state) {\n        if (props.match.params.query !== state.query) {\n          return {\n            query: props.match.params.query,\n          };\n        }\n    \n        // Return null if the state hasn't changed\n        return null; \n      }\n\n    componentDidUpdate(prevProps,prevStates){\n        if(this.state.query !== prevStates.query)\n        {\n            this.componentDidMount();\n        }\n    }\n    \n\n        componentDidMount(){\n            \n            fetch(`https://www.googleapis.com/youtube/v3/search?q=${this.state.query}&order=viewCount&part=snippet&type=video&maxResults=20&key=AIzaSyCMwyn5PYk99jDsgTFG3d4AAiKTcptRMoU`)\n            .then(data=>data.json())\n            .then(data1=>{\n                this.setState({\n                    relatedvideo:data1.items\n                })\n            })\n            .catch(()=>{\n                alert('Failed');\n            })\n        \n    }\n\n    render(){\n        \n       \n      \n        //console.log(this.state);   \n        //console.log(video_static_data_get);\n        \n        const{relatedvideo,video_static_data_get}=this.state;\n\n        return(\n            <div className=\"watch_main\"  >\n\n                <div className=\"right_side\">\n                    {\n                        relatedvideo.map((data)=>{\n                        return (\n                           <div className=\"related_video\">\n                          <div className=\"video_div\">\n                              \n                              <Link to={`/watch/${data.id.videoId}`} className=\"video_image_side\">\n                              \n                               <span className=\"hover_show_icon\"><img width=\"25px\" src={imghovericon}></img></span>\n                                   <img className=\"watch_img_right_side\" width=\"180px\" height=\"100px\" src={data.snippet.thumbnails.medium.url}></img>\n                               </Link>\n                            \n                          \n                          \n                           <div className=\"video_title_side\">\n                               <Link to={`/watch/${data.id.videoId}`} className=\"youtube_search_tilte\" title={data.snippet.title}>{data.snippet.title}</Link>\n                               <span title={data.snippet.channelTitle} className=\"watch_channel_name\">{data.snippet.channelTitle}</span>\n                               <span title=\"venus\" className=\"watch_channel_name\">456648</span>\n                           </div>\n                       </div>\n\n                   </div>\n\n                        )\n                    })\n                     }\n    \n                </div>\n                \n            </div>\n        )\n    }}\n\nexport default YoutubeSearch;"]},"metadata":{},"sourceType":"module"}